// generated by Fast Light User Interface Designer (fluid) version 1.0401

#include "fToolUI.h"

static void callbackMenuitemFileopen(Fl_Menu_* w, void*) {
  Fl_Native_File_Chooser fnfc;
      fnfc.title("选择数据文件");
      fnfc.type(Fl_Native_File_Chooser::BROWSE_FILE);
      fnfc.options(Fl_Native_File_Chooser::USE_FILTER_EXT);
      fnfc.filter("fTool Data File\t*.ftd\n");
      if ((fnfc.show() != 0) ||(!fnfc.filename())) return;
      loadIniGui(fnfc.filename());
      //readini
}

static void callbackMenuitemFilesave(Fl_Menu_* w, void*) {
  Fl_Native_File_Chooser fnfc;
      fnfc.title("保存数据文件");
      fnfc.type(Fl_Native_File_Chooser::BROWSE_SAVE_FILE);
      fnfc.options(Fl_Native_File_Chooser::SAVEAS_CONFIRM | Fl_Native_File_Chooser::USE_FILTER_EXT);
      fnfc.filter("fTool Data File\t*.ftd\n");
      fnfc.preset_file("preset.ftd");
      if ((fnfc.show() != 0) ||(!fnfc.filename())) return;
      //saveini
}

static void callbackMenuitemMinimize(Fl_Menu_* w, void*) {
  Fl_Window* wd = w->window();
  wd->iconize();
}

static void callbackMenuitemClose(Fl_Menu_* w, void*) {
  Fl_Window* wd = w->window();
  wd->hide();
}

Fl_Double_Window *windowMain=(Fl_Double_Window *)0;

Fl_Menu_Bar *barMain=(Fl_Menu_Bar *)0;

Fl_Menu_Item menu_barMain[] = {
 {"@fileopen", FL_CONTROL|'o',  (Fl_Callback*)callbackMenuitemFileopen, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"@filesave", FL_CONTROL|'s',  (Fl_Callback*)callbackMenuitemFilesave, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"                                                                     fTool   "
"                                                                 ", 0,  0, 0, 1, (uchar)FL_NORMAL_LABEL, 1, 14, 0},
 {"@2>", 0,  (Fl_Callback*)callbackMenuitemMinimize, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"@1+", 0,  (Fl_Callback*)callbackMenuitemClose, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Group *groupConnectSocket=(Fl_Group *)0;

Fl_Group *groupConnectSerial=(Fl_Group *)0;

Fl_Menu_Item menu_3circle[] = {
 {"9600", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"115200", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"460800", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Button *buttonRead=(Fl_Button *)0;

Fl_Button *buttonCopy=(Fl_Button *)0;

Fl_Button *buttonWrite=(Fl_Button *)0;

Fl_Button *buttonCustom=(Fl_Button *)0;

Fl_Group *groupRead=(Fl_Group *)0;

Fl_Group *groupWrite=(Fl_Group *)0;

Fl_Double_Window* make_window() {
  { windowMain = new Fl_Double_Window(720, 480, "fTool");
    windowMain->color(FL_LIGHT2);
    windowMain->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
    { barMain = new Fl_Menu_Bar(0, 0, 720, 30);
      barMain->color(FL_LIGHT2);
      barMain->menu(menu_barMain);
    } // Fl_Menu_Bar* barMain
    { Fl_Wizard* o = new Fl_Wizard(15, 45, 195, 160);
      o->color(FL_GRAY0);
      { groupConnectSocket = new Fl_Group(15, 45, 195, 160);
        groupConnectSocket->box(FL_THIN_UP_FRAME);
        groupConnectSocket->color(FL_LIGHT2);
        groupConnectSocket->labeltype(FL_NO_LABEL);
        groupConnectSocket->hide();
        { Fl_Input* o = new Fl_Input(25, 70, 175, 30, "@-3circle  远程主机地址");
          o->labelfont(1);
          o->labelsize(15);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(25, 125, 175, 30, "@-3circle  远程主机端口");
          o->labelfont(1);
          o->labelsize(15);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        } // Fl_Input* o
        { Fl_Button* o = new Fl_Button(25, 165, 85, 30, "切换到串口");
          o->color(FL_LIGHT2);
          o->labelfont(1);
        } // Fl_Button* o
        { Fl_Light_Button* o = new Fl_Light_Button(120, 165, 80, 30, "连接");
          o->box(FL_THIN_UP_BOX);
          o->color(FL_LIGHT2);
          o->selection_color(FL_GREEN);
          o->labelfont(1);
          o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
        } // Fl_Light_Button* o
        groupConnectSocket->end();
      } // Fl_Group* groupConnectSocket
      { groupConnectSerial = new Fl_Group(15, 45, 195, 160);
        groupConnectSerial->box(FL_THIN_UP_FRAME);
        groupConnectSerial->color(FL_LIGHT2);
        groupConnectSerial->labeltype(FL_NO_LABEL);
        { Fl_Input_Choice* o = new Fl_Input_Choice(25, 70, 175, 30, "@-3circle  端口");
          o->color(FL_LIGHT2);
          o->selection_color(FL_LIGHT2);
          o->labelfont(1);
          o->labelsize(15);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        } // Fl_Input_Choice* o
        { Fl_Input_Choice* o = new Fl_Input_Choice(25, 125, 175, 30, "@-3circle  波特率(bps)");
          o->color(FL_LIGHT2);
          o->selection_color(FL_LIGHT2);
          o->labelfont(1);
          o->labelsize(15);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
          o->menu(menu_3circle);
        } // Fl_Input_Choice* o
        { Fl_Button* o = new Fl_Button(25, 165, 85, 30, "切换套接字");
          o->color(FL_LIGHT2);
        } // Fl_Button* o
        { Fl_Light_Button* o = new Fl_Light_Button(120, 165, 80, 30, "打开");
          o->box(FL_THIN_UP_BOX);
          o->color(FL_LIGHT2);
          o->selection_color(FL_GREEN);
          o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
        } // Fl_Light_Button* o
        groupConnectSerial->end();
      } // Fl_Group* groupConnectSerial
      o->end();
    } // Fl_Wizard* o
    { buttonRead = new Fl_Button(20, 215, 180, 50, "@refresh    一键读取");
      buttonRead->box(FL_THIN_UP_BOX);
      buttonRead->color(FL_LIGHT2);
      buttonRead->labelfont(1);
    } // Fl_Button* buttonRead
    { buttonCopy = new Fl_Button(20, 275, 180, 50, "@filenew    复制参数");
      buttonCopy->box(FL_THIN_UP_BOX);
      buttonCopy->color(FL_LIGHT2);
      buttonCopy->labelfont(1);
    } // Fl_Button* buttonCopy
    { buttonWrite = new Fl_Button(20, 335, 180, 50, "@2->|    一键写入");
      buttonWrite->box(FL_THIN_UP_BOX);
      buttonWrite->color(FL_LIGHT2);
      buttonWrite->labelfont(1);
    } // Fl_Button* buttonWrite
    { buttonCustom = new Fl_Button(20, 395, 180, 50, "@<->    自定义按钮1");
      buttonCustom->box(FL_THIN_UP_BOX);
      buttonCustom->color(FL_LIGHT2);
      buttonCustom->labelfont(1);
    } // Fl_Button* buttonCustom
    { groupRead = new Fl_Group(220, 45, 485, 205);
      groupRead->box(FL_THIN_UP_FRAME);
      groupRead->end();
    } // Fl_Group* groupRead
    { groupWrite = new Fl_Group(220, 260, 485, 205);
      groupWrite->box(FL_THIN_UP_FRAME);
      groupWrite->end();
    } // Fl_Group* groupWrite
    windowMain->size_range(720, 480, 720, 480);
    windowMain->end();
  } // Fl_Double_Window* windowMain
  return windowMain;
}
